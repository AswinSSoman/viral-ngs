"""
   Framework for comparing assemblies of the same data generated by different methods.
"""

__author__ = 'Daniel Park <dpark@broadinstitute.org>, Ilya Shlyakhter <ilya@broadinstitute.org>'

import os.path
import itertools

configfile: "cfg.yaml"

workdir: os.path.join( config['cmp_dir'], '__'.join( config['assemblies'] ) )

def read_file(fname):
    with open(fname, 'rt') as inf:
        for line in inf:
            yield line.rstrip('\n')

def consolidate_reports(infiles, outfile):
    header = None
    with open(outfile, 'wt') as outf:
        for infile in infiles:
            with open(infile, 'rt') as inf:
                row = inf.readline()
                if not header:
                    header = row
                    outf.write("sample\t%s" % header)
                row = inf.readline()
                assert infile.endswith('.txt')
                sample = os.path.basename(infile)[:-4]
                outf.write("%s\t%s" % (sample, row))

config['samples'] = list(read_file(os.path.join(config['cmp_dir'],'samples-assembly.txt')))

rule all:
	input:	"pairdiffs/{assembly1}/{assembly2}/report-diff.txt".format(assembly1=assembly1,assembly2=assembly2) for assembly1, assembly2 in itertools.combinations( config['assemblies'], 2 )

rule consolidate:
	input:
		lambda wildcards: expand("pairdiffs/{assembly1}/{assembly2}/{sample}.txt", sample=config['samples'],**wildcards)
	output:
		"pairdiffs/{assembly1}/{assembly2}/report-diff.txt"
	run:
		consolidate_reports(input, output[0])

rule make_diff:
    # Compute a pairwise difference between a pair of aseemblies; does not use the reference.
	input:
		lambda wildcards: expand("{cmp_dir}/{assembly}/{sample}.fasta", cmp_dir=config['cmp_dir'],assembly=(wildcards['assembly1'],wildcards['assembly2']),sample=wildcards['sample'])
                
	output:
		"pairdiffs/{assembly1}/{assembly2}/{sample}.txt"
	shell:
		"{config[viral_ngs_dir]}/reports.py alignment_summary {input} --outfileName={output}"
