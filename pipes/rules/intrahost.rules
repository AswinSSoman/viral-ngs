"""
    This is a basic framework for intrahost variant calling in viral genomes.
"""

__author__ = 'Daniel Park <dpark@broadinstitute.org>'

from snakemake.utils import makedirs
import os, os.path, time


rule all_intrahost:
    input:
            config["dataDir"]+'/'+config["subdirs"]["intrahost"] +'/isnvs.vcf.gz',
            config["dataDir"]+'/'+config["subdirs"]["intrahost"] +'/isnvs.filtered.vcf.gz'

rule isnvs_per_sample:
    input:
            config["dataDir"]+'/'+config["subdirs"]["align_self"]+'/{sample}.mapped.bam',
            config["dataDir"]+'/'+config["subdirs"]["assembly"]  +'/{sample}.fasta',
    output: config["dataDir"]+'/'+config["subdirs"]["intrahost"] +'/vphaser2.{sample}.txt.gz'
    resources: mem=7
    params: LSF=config.get('LSF_queues', {}).get('short', '-W 4:00'),
            logid="{sample}"
    run:
            makedirs(config["dataDir"]+'/'+config["subdirs"]["intrahost"])
            shell("{config[binDir]}/intrahost.py vphaser_one_sample {input} {output}")
            
rule isnvs_vcf:
    input:
            expand("{dataDir}/{subdir}/vphaser2.{sample}.txt.gz",
                dataDir=config["dataDir"],
                subdir=config["subdirs"]["intrahost"],
                sample=read_samples_file(config["samples_assembly"])),
            expand("{dataDir}/{subdir}/aligned_{chrom}.fasta",
                dataDir=config["dataDir"],
                subdir=config["subdirs"]["multialign_ref"],
                chrom=range(config["number_of_chromosomes"])),
            config["subdirs"]["multialign_ref"] + "/sampleNameList.txt"
    output:
            config["dataDir"]+'/'+config["subdirs"]["intrahost"] +'/isnvs.vcf.gz',
            config["dataDir"]+'/'+config["subdirs"]["intrahost"] +'/isnvs.annot.vcf.gz',
            config["dataDir"]+'/'+config["subdirs"]["intrahost"] +'/isnvs.annot.txt.gz',
    resources: mem=4
    params: LSF=config.get('LSF_queues', {}).get('short', '-W 4:00'),
            logid="all",
            refGenome=os.path.join(config["ref_genome"],config["ref_genome_file_prefix"]+".fasta"),
            snpEff_ref=config["snpEff_genome"],
            samples=read_samples_file(config["samples_assembly"])
    run:
            shell("{config[binDir]}/intrahost.py merge_to_vcf {params.refGenome} {output[0]}"
                + " --samples {params.samples}"
                + " --isnvs " + " ".join(["{config[dataDir]}/{config[subdirs][intrahost]}/vphaser2."+s+".txt.gz" for s in params.samples])
                + " --alignments " + " ".join(["{config[dataDir]}/{config[subdirs][multialign_ref]}/aligned_" + n + ".fasta" for n in range(config["number_of_chromosomes"])])
                + " --strip_chr_version"
                )
            shell("{config[binDir]}/interhost.py snpEff {output[0]} {params.snpEff_ref} {output[1]}")
            shell("{config[binDir]}/intrahost.py iSNV_table {output[1]} {output[2]}")
            
rule isnvs_vcf_filtered:
    input:
            expand("{dataDir}/{subdir}/vphaser2.{sample}.txt.gz",
                dataDir=config["dataDir"],
                subdir=config["subdirs"]["intrahost"],
                sample=read_samples_file(config["samples_assembly"])),
            expand("{dataDir}/{subdir}/aligned_{chrom}.fasta",
                dataDir=config["dataDir"],
                subdir=config["subdirs"]["multialign_ref"],
                chrom=range(config["number_of_chromosomes"]))
    output:
            config["dataDir"]+'/'+config["subdirs"]["intrahost"] +'/isnvs.filtered.vcf.gz',
            config["dataDir"]+'/'+config["subdirs"]["intrahost"] +'/isnvs.filtered.annot.vcf.gz',
            config["dataDir"]+'/'+config["subdirs"]["intrahost"] +'/isnvs.filtered.annot.txt.gz'
    resources: mem=4
    params: LSF=config.get('LSF_queues', {}).get('short', '-W 4:00'),
            logid="all",
            refGenome=os.path.join(config["ref_genome"],config["ref_genome_file_prefix"]+".fasta"),
            snpEff_ref=config["snpEff_genome"],
            samples=read_samples_file(config["samples_assembly"])
    run:
            shell("{config[binDir]}/intrahost.py merge_to_vcf {params.refGenome} {output[0]}"
                + " --samples {params.samples}"
                + " --isnvs " + " ".join(["{config[dataDir]}/{config[subdirs][intrahost]}/vphaser2."+s+".txt.gz" for s in params.samples])
                + " --alignments " + " ".join(["{config[dataDir]}/{config[subdirs][multialign_ref]}/aligned_" + n + ".fasta" for n in range(config["number_of_chromosomes"])])
                + " --strip_chr_version"
                )
            shell("{config[binDir]}/interhost.py snpEff {output[0]} {params.snpEff_ref} {output[1]}")
            shell("{config[binDir]}/intrahost.py iSNV_table {output[1]} {output[2]}")

