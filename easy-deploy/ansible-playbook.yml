-
  hosts: all
  vars:
    home_dir: "/home/{{ user }}"
    project_dir: "{{ home_dir }}/bin"
    venv_dir: "{{ home_dir }}/venv"
    data_dir: "{{ home_dir }}/data"
    licensed_tools_dir: "{{ home_dir }}/licensed_tools"
    gatk_path: "{{ licensed_tools_dir }}/gatk"
    novoalign_path: "{{ licensed_tools_dir }}/novoalign"
  environment:
    GATK_PATH: "{{ gatk_path }}"
    NOVOALIGN_PATH: "{{ novoalign_path }}"
    TEST_VAR: "foo"
  sudo: yes
  tasks:
    - name: Install htop
      apt: pkg=htop state=installed
    - name: Install git
      apt: pkg=git state=installed
    - name: Install python-virtualenv
      apt: pkg=python-virtualenv state=installed
    - name: Install python3
      apt: pkg=python3 state=installed
    - name: Install python3-pip
      apt: pkg=python3-pip state=installed
    - name: Install python3-nose
      apt: pkg=python3-nose state=installed
    - name: Install python-software-properties
      apt: pkg=python-software-properties state=installed
    - name: Install openjdk-7-jdk
      apt: pkg=openjdk-7-jdk state=installed
    - name: Install zlib1g-dev
      apt: pkg=zlib1g-dev state=installed
    - name: Install unzip
      apt: pkg=unzip state=installed
    - name: Install libncur5-dev
      apt: pkg=libncurses5-dev state=installed
    - name: Install libncursesw5-dev
      apt: pkg=libncursesw5-dev state=installed
    - name: Install gcc-4.7 # needed to build MOSAIK
      apt: pkg=gcc-4.7 state=installed

    # these apt packages are perhaps unnecessary
    - name: Install zlibc 
      apt: pkg=zlibc state=installed
    - name: Install libzip2 
      apt: pkg=libzip2 state=installed

    - name: Copying in latest viral-ngs from GitHub
      git: 
        repo: https://github.com/broadinstitute/viral-ngs.git
        dest: "{{ project_dir }}"
        version: HEAD
        accept_hostkey: yes

    - name: copy viral-ngs config.json
      command: "cp {{ project_dir }}/pipes/config.json  {{ data_dir }}/config.json"
      args:
        chdir: "{{ home_dir }}"
        creates: "{{ data_dir }}/config.json"

    - name: copy viral-ngs Snakefile
      command: "cp {{ project_dir }}/pipes/Snakefile  {{ data_dir }}/Snakefile"
      args:
        chdir: "{{ home_dir }}"
        creates: "{{ data_dir }}/Snakefile"

    #- name: copy viral-ngs Snakefile
    #  command: "mkdir {{ data_dir }}/00_raw/ {{ data_dir }}/01_cleaned/ {{ data_dir }}/01_per_sample/ {{ data_dir }}/02_align_to_self/ {{ data_dir }}/02_assembly/ {{ data_dir }}/03_align_to_ref/ {{ data_dir }}/03_interhost/ {{ data_dir }}/04_intrahost/"

    - name: copy gatk; REQUIRES host GATK_PATH set to licensed copy
      copy:
        owner: "{{ user }}" 
        group: "{{ user }}"  
        src: "{{ lookup('env','GATK_PATH') }}/" # trailing slash to copy contents only like rsync
        dest: "{{ gatk_path }}"

    - name: copy novoalign; REQUIRES host NOVOALIGN_PATH set to licensed copy
      copy:
        owner: "{{ user }}"  
        group: "{{ user }}"  
        src: "{{ lookup('env','NOVOALIGN_PATH') }}/" # trailing slash to copy contents only like rsync
        dest: "{{ novoalign_path }}"

    - name: Set GATK_PATH env var
      lineinfile: 
        dest: "/etc/environment"
        line: "GATK_PATH={{ gatk_path }}" 
        insertafter: 'EOF' 
        regexp: "GATK_PATH={{ gatk_path }}" 
        state: present

    - name: Set NOVOALIGN_PATH env var
      lineinfile: 
        dest: "/etc/environment"
        line: "NOVOALIGN_PATH={{ novoalign_path }}" 
        insertafter: 'EOF' 
        regexp: "NOVOALIGN_PATH={{ novoalign_path }}" 
        state: present

    - name: Create virtualenv
      command: "virtualenv --python=/usr/bin/python3.4 {{ venv_dir }}"
      args:
        creates: "{{ venv_dir }}"

    - name: Setup viral-ngs virtualenv (general)
      pip:
        virtualenv: "{{ venv_dir }}"
        requirements: "{{ project_dir }}/requirements.txt"

    - name: Setup viral-ngs virtualenv (Snakemake)
      pip:
        virtualenv: "{{ venv_dir }}"
        requirements: "{{ project_dir }}/requirements-pipes.txt"

    - name: Set owner of various files
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ user }}"  
        group: "{{ user }}"
        #mode: 0755
        recurse: yes
      with_items:
        - "{{ home_dir }}/"

    - name: Set execution bit of various files
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
        recurse: yes
      with_items:
        - "{{ project_dir }}/tools/build/"
        - "{{ gatk_path }}/"
        - "{{ novoalign_path }}/"

    - name: Copy virtualenv wrapper template  
      template: 
        src: "venv_exec.j2"
        dest: "{{ venv_dir }}/exec" 
        mode: 0755

    - name: Install viral-ngs tools
      command: "{{ venv_dir }}/exec python -m unittest test.unit.test_tools -v"
      args:
        chdir: "{{ project_dir }}"

    - name: Set owner of various files
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ user }}"  
        group: "{{ user }}"
        #mode: 0755
        recurse: yes
      with_items:
        - "{{ home_dir }}/"
        - "{{ data_dir }}/"
        - "{{ data_dir }}/00_raw/"
        - "{{ data_dir }}/01_cleaned/"
        - "{{ data_dir }}/01_per_sample/"
        - "{{ data_dir }}/02_align_to_self/"
        - "{{ data_dir }}/02_assembly/"
        - "{{ data_dir }}/03_align_to_ref/"
        - "{{ data_dir }}/03_interhost/"
        - "{{ data_dir }}/04_intrahost/"

